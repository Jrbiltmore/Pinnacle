
pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Clone the repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Build the application
                sh 'docker-compose build'
            }
        }

        stage('Test') {
            steps {
                // Run unit tests
                sh 'docker-compose run --rm api pytest tests/UnitTests'
                // Run end-to-end tests
                sh 'docker-compose run --rm api pytest tests/E2ETests'
            }
            post {
                always {
                    // Archive test results
                    junit '**/tests/UnitTests/*.xml'
                    junit '**/tests/E2ETests/*.xml'
                }
            }
        }

        stage('Deploy') {
            steps {
                // Deploy to the staging environment
                sh 'docker-compose up -d'
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
